static type Todo = {
  id: number;
  title: string;
  completed: boolean;
};
static type Filter = "all" | "active" | "completed";

<let/nextId=0>
<let/todos=([] as Todo[])>
<let/filter=("all" as Filter)>
<const/activeCount=todos.reduce(
  (count, todo) => (todo.completed ? count : count + 1),
  0,
)>
<script>
  const updateFilter = () => filter = ((location.hash.slice(2) as Filter) || "all");
  window.addEventListener("hashchange", updateFilter, { signal: $signal });
  updateFilter();
</script>

<section class="todoapp">
  <header class="header">
    <h1>todos</h1>
    <input
      class="new-todo"
      placeholder="What needs to be done?"
      onKeyDown({ key }, el) {
        const title = el.value.trim();
        if (key === "Enter" && title) {
          todos = [{ title, id: nextId++, completed: false }, ...todos];
          el.value = "";
        }
      }>
  </header>
  <if=todos.length>
    <section class="main">
      <input
        id="toggle-all"
        class="toggle-all"
        type="checkbox"
        checked=!activeCount
        checkedChange(completed) {
          todos = todos.map((todo) =>
            todo.completed === completed ? todo : { ...todo, completed },
          );
        }>
      <label for="toggle-all">
        Mark all as complete
      </label>
      <ul class="todo-list">
        <for|{ id, title, completed }, i| of=todos by="id">
          <if=(
            filter === "all" ||
            (filter === "completed" && completed) ||
            (filter === "active" && !completed)
          )>
            <let/editing=false>
            <li class=[
              "todo",
              {
                editing,
                completed,
              },
            ]>
              <div class="view">
                <input
                  class="toggle"
                  type="checkbox"
                  checked=completed
                  checkedChange(completed) {
                    todos = todos.toSpliced(i, 1, { id, title, completed });
                  }>
                <label onDblClick() {
                  editing = true;
                }>
                  ${title}
                </label>
                <button
                  class="destroy"
                  onClick() {
                    todos = todos.toSpliced(i, 1);
                  }/>
              </div>

              <if=editing>
                <const/done() {
                  editing = false;
                  const title = $textInput().value.trim();
                  if (title) {
                    todos = todos.toSpliced(i, 1, { id, title, completed });
                  }
                }>
                <input/$textInput
                  class="edit"
                  value=title
                  onFocusOut=done
                  onKeyUp({ key }) {
                    if (key === "Enter") {
                      done();
                    } else if (key === "Escape") {
                      editing = false;
                    }
                  }>
                <script>
                  $textInput().focus();
                  $textInput().setSelectionRange(0, $textInput().value.length);
                </script>
              </if>
            </li>
          </if>
        </for>
      </ul>
    </section>

    <footer class="footer">
      <span class="todo-count">
        <strong>${activeCount}</strong>
        ${" "}item${activeCount !== 1 && "s"} left
      </span>
      <ul class="filters">
        <li>
          <a
            href="#/"
            class={
              selected: filter === "all",
            }>
            All
          </a>
        </li>
        <li>
          <a
            href="#/active"
            class={
              selected: filter === "active",
            }>
            Active
          </a>
        </li>
        <li>
          <a
            href="#/completed"
            class={
              selected: filter === "completed",
            }>
            Completed
          </a>
        </li>
      </ul>
      <if=activeCount !== todos.length>
        <button
          class="clear-completed"
          onClick() {
            todos = todos.filter(({ completed }) => !completed);
          }>
          Clear Completed
        </button>
      </if>
    </footer>
  </if>
</section>
